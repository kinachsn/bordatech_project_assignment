#include <stdio.h>
#include <string.h>
#include "stm32f407xx.h"

#define LM75A_ADDR  0x48  // LM75A I2C adresi (A0=A1=A2=GND)
#define TEMP_REG    0x00  // Sıcaklık register adresi

I2C_Handle_t I2C1Handle;

void I2C1_GPIOInits(void) {
    GPIO_Handle_t I2CPins;

    I2CPins.pGPIOx = GPIOB;
    I2CPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
    I2CPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
    I2CPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
    I2CPins.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
    I2CPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

    // SCL (PB6)
    I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
    GPIO_Init(&I2CPins);

    // SDA (PB9)
    I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
    GPIO_Init(&I2CPins);
}

void I2C1_Inits(void) {
    I2C1Handle.pI2Cx = I2C1;
    I2C1Handle.I2C_Config.I2C_AckControl = I2C_ACK_ENABLE;
    I2C1Handle.I2C_Config.I2C_DeviceAddress = 0x61;  // Master cihaz adresi (önemsiz, STM32 master)
    I2C1Handle.I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_2;
    I2C1Handle.I2C_Config.I2C_SCLSpeed = I2C_SCL_SPEED_SM;  // Standart mod (100 kHz)
    I2C_Init(&I2C1Handle);
}

void LM75A_ReadTemp(void) {
    uint8_t temp_data[2];  // 2 byte veri (11-bit sıcaklık)
    I2C_PeripheralControl(I2C1, ENABLE);
    I2C_ManageAcking(I2C1,I2C_ACK_ENABLE);

    uint8_t reg_addr = TEMP_REG;
    I2C_MasterSendData(&I2C1Handle, &reg_addr, 1, LM75A_ADDR, I2C_ENABLE_SR);
    I2C_MasterReceiveData(&I2C1Handle, temp_data, 2, LM75A_ADDR, I2C_DISABLE_SR);

    int16_t temp = (temp_data[0] << 8) | temp_data[1];
    temp >>= 5; // LM75A 11-bit veriyi 5 bit sağa kaydırarak verir
    float temperature = temp * 0.125;
    printf("Temperature: %.2f\n", temperature);
}

void TIM2_Init(void) {
	TIM2_PCLK_EN();
    TIM2->PSC = 16000 - 1;     // 16 MHz / 16000 = 1 kHz
    TIM2->ARR = 1000 - 1;      // 1 kHz / 1000 = 1 Hz (1 saniyede bir kesme)
    TIM2->DIER |= (1 << 0);    // Update interrupt enable
    TIM2->CR1 |= (1 << 0);     // Timer enable
    TIM2_IRQInterrupt_Config(ENABLE); // NVIC kesmeyi aktif et
}

void TIM2_IRQHandler(void) {
    if (TIM2->SR & 0x01) { // Update interrupt flag kontrolü
        LM75A_ReadTemp(); // Sıcaklık oku
        TIM2->SR &= ~(1 << 0); // Flag'i temizle
    }
}

int main(void) {
    I2C1_GPIOInits();
    I2C1_Inits();
    TIM2_Init();

    while(1) {
        // Ana döngü boş, tüm işlem kesme içinde
    }
}
